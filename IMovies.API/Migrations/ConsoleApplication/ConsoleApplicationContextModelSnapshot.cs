// <auto-generated />
using System;
using IMovies.Console.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IMovies.API.Migrations.ConsoleApplication
{
    [DbContext(typeof(ConsoleApplicationContext))]
    partial class ConsoleApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IMovies.Console.Models.Companies", b =>
                {
                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("value")
                        .HasColumnType("int");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("IMovies.Console.Models.Genres", b =>
                {
                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("value")
                        .HasColumnType("int");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("IMovies.Console.Models.IMovie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Adulto")
                        .HasColumnType("bit");

                    b.Property<string>("BackGroundPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MovieIdentification")
                        .HasColumnType("int");

                    b.Property<string>("OriginLanguage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PosterPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("VoteAverage")
                        .HasColumnType("float");

                    b.Property<double>("VoteCount")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("IMovies");
                });

            modelBuilder.Entity("IMovies.Console.Models.IMovieDetails", b =>
                {
                    b.Property<Guid>("GuidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Adulto")
                        .HasColumnType("bit");

                    b.Property<string>("BackGroundPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionMovie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IMovieDb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginLanguage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PosterPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TagLine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("VoteAverage")
                        .HasColumnType("float");

                    b.Property<double>("VoteCount")
                        .HasColumnType("float");

                    b.HasKey("GuidId");

                    b.ToTable("IMovieDetails");
                });

            modelBuilder.Entity("IMovies.Console.Models.Languages", b =>
                {
                    b.Property<string>("CodeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameLanguage")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("IMovies.Console.Models.IMovieDetails", b =>
                {
                    b.OwnsOne("System.Collections.Generic.List<IMovies.Console.Models.Companies>", "Companies", b1 =>
                        {
                            b1.Property<Guid>("IMovieDetailsGuidId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Capacity")
                                .HasColumnType("int");

                            b1.HasKey("IMovieDetailsGuidId");

                            b1.ToTable("IMovieDetails");

                            b1.WithOwner()
                                .HasForeignKey("IMovieDetailsGuidId");
                        });

                    b.OwnsOne("System.Collections.Generic.List<IMovies.Console.Models.Genres>", "Genres", b1 =>
                        {
                            b1.Property<Guid>("IMovieDetailsGuidId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Capacity")
                                .HasColumnType("int");

                            b1.HasKey("IMovieDetailsGuidId");

                            b1.ToTable("IMovieDetails");

                            b1.WithOwner()
                                .HasForeignKey("IMovieDetailsGuidId");
                        });

                    b.OwnsOne("System.Collections.Generic.List<IMovies.Console.Models.Languages>", "Languages", b1 =>
                        {
                            b1.Property<Guid>("IMovieDetailsGuidId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Capacity")
                                .HasColumnType("int");

                            b1.HasKey("IMovieDetailsGuidId");

                            b1.ToTable("IMovieDetails");

                            b1.WithOwner()
                                .HasForeignKey("IMovieDetailsGuidId");
                        });

                    b.Navigation("Companies");

                    b.Navigation("Genres");

                    b.Navigation("Languages");
                });
#pragma warning restore 612, 618
        }
    }
}
